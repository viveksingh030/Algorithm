
//problem link https://leetcode.com/problems/merge-k-sorted-lists/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    static class Node{
        int val;
        ListNode node;
        Node(int val,ListNode node){
            this.val=val;
            this.node=node;
        }
    }
    public ListNode mergeKLists(ListNode[] lists) {
       PriorityQueue<Node> pq=new PriorityQueue<>((a,b)->{
           if(a.val<b.val){
               return -1;
           }
           if(a.val==b.val){
               return 0;
           }
           else{
               return 1;
           }
       });
       for(int i=0;i<lists.length;i++){
           ListNode n=lists[i];
           if(n==null){
               continue;
           }
           while(n!=null){
            pq.add(new Node(n.val,n));
            n=n.next;
           }
       }
       ListNode res=new ListNode();
       ListNode temp=res;
       while(pq.isEmpty()==false){
           Node n=pq.poll();
           temp.next=n.node;
           temp=temp.next;
       }
       temp.next=null;
       return res.next;
    }
}
